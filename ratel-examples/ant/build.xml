<?xml version="1.0" encoding="UTF-8"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one
   or more contributor license agreements.  See the NOTICE file
   distributed with this work for additional information
   regarding copyright ownership.  The ASF licenses this file
   to you under the Apache License, Version 2.0 (the
   "License"); you may not use this file except in compliance
   with the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<project name="ratel-examples" default="help" basedir="..">
   
    <property file="../ant/build.properties"/>
    <property file="ant/build.properties"/>
    <property file="../ratel-examples/ant/build.properties"/>
    
    <property name="dir.web" value="web"/>
    <property name="dir.weblib" value="${dir.web}/WEB-INF/lib"/>
    <property name="repository" value="http://repo1.maven.org"/>
   
    <property name="jar.log4j" value="log4j-${log4j.version}.jar"/>
    <property name="jar.servlet" value="servlet-api-${servlet-api.version}.jar"/>
    <property name="jar.portlet" value="portlet-api-${portlet-api.version}.jar"/>
    <property name="jar.collections" value="commons-collections-${commons-collections.version}.jar"/>
   <property name="jar.lang" value="commons-lang-${commons-lang.version}.jar"/>
    <property name="jar.velocity" value="velocity-${velocity.version}.jar"/>
    <property name="jar.antlr" value="antlr-${antlr.version}.jar"/>
    <property name="jar.h2" value="h2-${h2.version}.jar"/>
    <property name="jar.dom4j" value="dom4j-${dom4j.version}.jar"/>
    <property name="jar.hibernate-commons-annotations" value="hibernate-commons-annotations-${hibernate-commons-annotations.version}.jar"/>
    <property name="jar.hibernate-core" value="hibernate-core-${hibernate.version}.jar"/>
    <property name="jar.hibernate-entitymanager" value="hibernate-entitymanager-${hibernate.version}.jar"/>
    <property name="jar.hibernate-jpa" value="hibernate-jpa-2.0-api-${hibernate-jpa.version}.jar"/>
    <property name="jar.javassist" value="javassist-${javassist.version}.jar"/>
    <property name="jar.jboss-logging" value="jboss-logging-${jboss-logging.version}.jar"/>
    <property name="jar.jboss-transaction-api" value="jboss-transaction-api_1.1_spec-${jboss-transaction-api.version}.jar"/>
    
    <presetdef name="javac">
        <javac includeantruntime="false" />
    </presetdef>
    
    <path id="compile.classpath">
        <fileset dir="build/web/WEB-INF/lib">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="../ratel/lib">
            <include name="*.jar"/>
        </fileset>
    </path>
    
    <macrodef name="webDownloadMacro">
        <attribute name="name"/>
        <attribute name="path"/>
        <sequential>
            <get src="${repository}/maven2/@{path}/@{name}" 
                 dest="${dir.weblib}/@{name}"
                 verbose="true"
                 usetimestamp="true"/>            
        </sequential>
    </macrodef> 

    <target name="clean" description="clean project">
        <delete dir="build" />
    </target>
    
    <target name="init" description="Initialize folders" depends="clean">
        <mkdir dir="build/web"/>
        <mkdir dir="../dist" />
        <mkdir dir="${dir.weblib}"/>
        <copy todir="build/web">
            <fileset dir="web">
                <exclude name="**/META-INF/**"/>
            </fileset>
        </copy>
        <copy todir="build/web/WEB-INF/lib">
            <fileset dir="../dist">
                <include name="ratel*.jar"/>
            </fileset>
        </copy>
    </target>

    <target name="compile" depends="init" description="compile ratel">
        <mkdir dir="build/web/WEB-INF/classes"/>
        <javac destdir="build/web/WEB-INF/classes" debug="true" srcdir="src/java">
            <classpath refid="compile.classpath"/>
        </javac>
        <copy todir="build/web/WEB-INF/classes/META-INF">
            <fileset dir="src/java/META-INF"/>
        </copy>
    </target>
    
    <target name="war" depends="compile" description="Build War">
        <war destfile="../dist/ratel-examples.war" webxml="build/web/WEB-INF/web.xml">
            <fileset dir="build/web"/>
            <lib dir="build/web/WEB-INF/lib"/>
            <!--<classes dir="build/classes"/>-->
        </war>
    </target>
    
    <target name="dist" depends="war" description="Build distribution">
    </target>
    
    <target name="deploy" description="copy WAR files to app server" depends="war">
        <echo> Deploying to: ${dir.appserver}</echo>
        <delete file="${dir.appserver}/ratel-examples.war" quiet="true"/>
        <sleep seconds="5"/>
        <copy file="../dist/ratel-examples.war" todir="${dir.appserver}" overwrite="true"/>
    </target>
    
    <target name="get-deps" description="download JAR dependencies">
        <mkdir dir="${dir.weblib}"/>
        <webDownloadMacro name="${jar.collections}" path="commons-collections/commons-collections/${commons-collections.version}"/>
        <webDownloadMacro name="${jar.lang}" path="commons-lang/commons-lang/${commons-lang.version}"/>
        <webDownloadMacro name="${jar.antlr}" path="antlr/antlr/${antlr.version}"/>
        <webDownloadMacro name="${jar.h2}" path="com/h2database/h2/${h2.version}"/>
        <webDownloadMacro name="${jar.dom4j}" path="dom4j/dom4j/${dom4j.version}"/>
        <webDownloadMacro name="${jar.hibernate-commons-annotations}" path="org/hibernate/common/hibernate-commons-annotations/${hibernate-commons-annotations.version}"/>
        <webDownloadMacro name="${jar.hibernate-core}" path="org/hibernate/hibernate-core/${hibernate.version}"/>
        <webDownloadMacro name="${jar.hibernate-entitymanager}" path="org/hibernate/hibernate-entitymanager/${hibernate.version}"/>
        <webDownloadMacro name="${jar.hibernate-jpa}" path="org/hibernate/javax/persistence/hibernate-jpa-2.0-api/${hibernate-jpa.version}"/>
        <webDownloadMacro name="${jar.javassist}" path="org/javassist/javassist/${javassist.version}"/>
        <webDownloadMacro name="${jar.jboss-logging}" path="org/jboss/logging/jboss-logging/${jboss-logging.version}"/>
        <webDownloadMacro name="${jar.jboss-transaction-api}" path="org/jboss/spec/javax/transaction/jboss-transaction-api_1.1_spec/${jboss-transaction-api.version}"/>        
        <webDownloadMacro name="${jar.log4j}" path="log4j/log4j/${log4j.version}"/>
        <webDownloadMacro name="${jar.velocity}" path="org/apache/velocity/velocity/${velocity.version}"/>
    </target>
    
    <target name="precompile-templates" description="compile templates">
  <java dir="${basedir}" jar="ant/lib/js.jar" fork="true" failonerror="true">
    <arg value="ant/rhino-handlebars-compiler.js"/>
    <arg value="--handlebars"/>
    <arg value="web/js/lib/handlebars.js"/>
    <arg value="--templates"/>
    <arg value="web/js/app/views"/>
    <arg value="--output"/>
    <arg value="web/js/compiled-templates.js"/>
  </java>
  <echo>Template Precompiled to web/js/compiled-templates.js</echo>
</target>

</project>
